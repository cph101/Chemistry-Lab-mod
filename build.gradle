plugins {
	id 'maven-publish'
	id 'org.quiltmc.loom' version '1.+'
	id 'io.github.ladysnake.chenille' version '0.11.3'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven {
		name = 'Ladysnake Mods'
		url = 'https://maven.ladysnake.org/releases'
	}
	maven {
		name = 'TerraformersMC'
		url = 'https://maven.terraformersmc.com/' // modmenu
	}

	maven { url "https://maven.willbl.dev/releases" } // not sure why i'd need this but ok

	maven {
		name = 'Quilt'
		url = 'https://maven.quiltmc.org/release' // this one is obvious
	}

	maven {
		name = 'GitHub'
		url = 'https://jitpack.io'
	}

	maven {
		name "Modrinth"
		url "https://api.modrinth.com/maven" // idk really
	}

	maven {
		name = "Curseforge Maven"
		url = "https://cursemaven.com"
	}

	maven { url 'https://masa.dy.fi/maven' } // carpet mod

}

loom {
    splitEnvironmentSourceSets()

	mods {
		"chemistrylab" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}

}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

	implementation "carpet:fabric-carpet:${project.minecraft_version}-${project.carpet_core_version}"
	modImplementation include("maven.modrinth:midnightlib:${project.midnightlib_version}")
	modImplementation "curse.maven:qsl-634179:4102455"
	modImplementation "org.quiltmc:quilt-loader:${project.loader_version}"
	modImplementation "org.quiltmc:qsl:${project.qsl_version}+${project.minecraft_version}"

	modImplementation include("com.github.Arathain:LodestoneLib-Quilt:${lodestone_version}")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
  publications {
    maven(MavenPublication) {
      groupId = project.maven_group
      artifactId = project.archives_base_name
      version = project.mod_version
      from components.java
    }
  }
}
